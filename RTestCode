BASE CASE
ss=list(
    tasks=c("A","B"), #two different tasks
    assigns=c("a","b"), # 2 different assignments
    users=c(1:3), #5 users
    perform=matrix(c(5,4,5,6,8,10,10,8,5,15),ncol=2), #user 5 is good at everything, user 4 is terrible at task B etc
    P=matrix(c(1,0,0.5,0,1,0.5),ncol=2), #a does only A, b does only B, c does both A and B
    demand=c(15,35), #we need to do 15 of task A, 35 of task B
    otcost=1000, #this is just some huge number to make sure we use the 5 people before the backlog
    otperform=c(1,1), #this means that ss2$backlog is going to show the number that our people couldn't do
    solution=NULL,
    backlog=NULL,
    istar=NULL,
    jstar=NULL,
    status=c("incomplete")
)

ss2=dual_assignment(ss)
ss2$solution #this shows us how people are assigned
ss2$backlog #this shows us how many tasks need to be done


OUTPUT:
ss2$solution #this shows us how people are assigned
[1] 1 2 2 1 2
> ss2$backlog #this shows us how many tasks need to be done
[1] 4 2

-----------------------------------------------------------------
CASE 2
 
ss=list(
    tasks=c("A","B","C"), #three different tasks
    assigns=c("a","b","c","d"), # 3 different assignments
    users=c(1:5), #5 users
    perform=matrix(c(10,5,7,6,2,7,11,4,3,1,2,4,12,10,17),ncol=3), #user 5 is good at everything, user 4 is terrible at task B etc
    P=matrix(c(1,0,0,0.5,0,1,0,0.5,0,0,1,0),ncol=3), #a does only A, b does only B, c does both A and B
    demand=c(15,35,50), #cwe need to do 15 of task A, 35 of task B
    otcost=1000, #this is just some huge number to make sure we use the 5 people before the backlog
    otperform=c(1,1,1), #this means that ss2$backlog is going to show the number that our people couldn't do
    solution=NULL,
    backlog=NULL,
    istar=NULL,
    jstar=NULL,
    status=c("incomplete")
)

ss2=dual_assignment(ss)
ss2$solution #this shows us how people are assigned
ss2$backlog #this shows us how many tasks need to be done


Output:
 ss2$solution #this shows us how people are assigned
[1] 1 2 3 3 3
 ss2$backlog #this shows us how many tasks need to be done
[1]  5 24 11

-------------------------------------------------------------
Case 3:  I added 
 
ss=list(
    tasks=c("A","B","C"), #three different tasks
    assigns=c("a","b","c","d"), # 3 different assignments
    users=c(1:5), #5 users
    perform=matrix(c(10,5,7,6,2,7,11,4,3,1,2,4,12,10,17),ncol=3), #user 5 is good at everything, user 4 is terrible at task B etc
    P=matrix(c(1,0,0,0.5,0,1,0,0.5,0,0,1,0),ncol=3), #a does only A, b does only B, c does both A and B
    demand=c(15,35,50), #cwe need to do 15 of task A, 35 of task B
    otcost=1000, #this is just some huge number to make sure we use the 5 people before the backlog
    otperform=c(1,1,1), #this means that ss2$backlog is going to show the number that our people couldn't do
    solution=NULL,
    backlog=NULL,
    istar=NULL,
    jstar=NULL,
    status=c("incomplete")
)

ss2=dual_assignment(ss)
ss2$solution #this shows us how people are assigned
ss2$backlog #this shows us how many tasks need to be done


